{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "latest-canyon",
   "metadata": {},
   "outputs": [],
   "source": [
    "program_text = \"\"\"\n",
    "\n",
    "void main(int ars, char argv[])\n",
    "{\n",
    "    int i;    //init\n",
    "    float f;\n",
    "    string s;\n",
    "    bool b;\n",
    "    \n",
    "    hex h;\n",
    "    oct o;\n",
    "    bin bit;\n",
    "    fixed fix;\n",
    "    \n",
    "    read(s);   //read write\n",
    "    print( s );\n",
    "    \n",
    "    i = 06;    //assign\n",
    "    i =0x7;\n",
    "    i= 0b01;\n",
    "    i=6;\n",
    "    f = 0.50;\n",
    "    \n",
    "    if(i == 6  or i==5 and i!= 6 and i<=5)  //condition\n",
    "    {\n",
    "        i = 5;\n",
    "    }\n",
    "    else\n",
    "    {\n",
    "        i = 6;\n",
    "    }\n",
    "    \n",
    "    while(i < 10) //cycle\n",
    "    {\n",
    "        i = i + 1;\n",
    "    }\n",
    "    \n",
    "    i = 08;\n",
    "    i = 0x1g2;\n",
    "    i = 0b02;\n",
    "    i = 0abc;\n",
    "    ias& = 12;\n",
    "    i = 12abc;\n",
    "}\n",
    "\n",
    "\"\"\"\n",
    "\n",
    "dictionary = {\n",
    "    \"void\": \"function_type\",\n",
    "    \"int\": \"type\",\n",
    "    \"float\": \"type\",\n",
    "    \"string\": \"type\",\n",
    "    \"char\": \"type\",\n",
    "    \"bool\":  \"type\",\n",
    "    \"hex\": \"type\",\n",
    "    \"oct\": \"type\",\n",
    "    \"bin\": \"type\",\n",
    "    \"fixed\": \"type\",\n",
    "    \n",
    "    \"main\": \"entry_point\",\n",
    "    \"(\": \"bracket_smooth_l\",\n",
    "    \")\": \"bracket_smooth_r\",\n",
    "    \"{\": \"bracket_curve_l\",\n",
    "    \"}\": \"bracket_curve_r\",\n",
    "    \"[\": \"bracket_rect_l\",\n",
    "    \"]\": \"bracket_rect_r\",\n",
    "    \";\": \"divider\",\n",
    "    \"read\": \"reader\",\n",
    "    \"print\": \"printer\",\n",
    "    \"==\": \"comparsion\",\n",
    "    \"<=\": \"comparsion\",\n",
    "    \">=\": \"comparsion\",\n",
    "    \"=\": \"assign\",\n",
    "    \"!=\": \"comparsion\",\n",
    "    \"<\": \"comparsion\",\n",
    "    \">\": \"comparsion\",\n",
    "    \"+\": \"math_symbol\",\n",
    "    \"-\": \"math_symbol\",\n",
    "    \"*\": \"math_symbol\",\n",
    "    \"//\": \"comment\",\n",
    "    \"/\": \"math_symbol\",\n",
    "    \"%\": \"math_symbol\",\n",
    "    \",\": \"comma\",\n",
    "    \" \": \"separator\",\n",
    "    \"\\n\": \"new_line\",\n",
    "    \n",
    "    \"if\": \"condition\",\n",
    "    \"else\": \"condition_else\",\n",
    "    \"while\": \"cycle\"\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "polyphonic-basketball",
   "metadata": {},
   "outputs": [],
   "source": [
    "LETTERS = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n",
    "SYMBOLS = \"(){}[];=<>!+-*/%, \"\n",
    "NUMBERS = \"0123456789\"\n",
    "STOP_POINTS = \" (){}[];=<>!+-*/%,\\n\"\n",
    "\n",
    "BIN = \"01\"\n",
    "OCT = \"01234567\"\n",
    "HEX = \"0123456789abcdefABCDEF\"\n",
    "\n",
    "HEX_START = \"x\"\n",
    "BIN_START = \"b\"\n",
    "\n",
    "POINT = \".\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "exterior-harassment",
   "metadata": {},
   "outputs": [],
   "source": [
    "class Lexer(object):\n",
    "    \n",
    "    def __init__(self, program_text):\n",
    "        self.text = program_text + \"\\n\"\n",
    "        self.list = []\n",
    "    \n",
    "        \n",
    "    def run(self):\n",
    "        \n",
    "        def state_error(symbol, word):\n",
    "            if symbol in STOP_POINTS:\n",
    "                self.list.append([word[0], \" - error\"])\n",
    "                word[0] = \"\"\n",
    "                return state_start(symbol, word)\n",
    "            else:\n",
    "                return state_error\n",
    "            \n",
    "        def state_unary_stop_symbol(symbol, word):\n",
    "            if dictionary.get(word[0], False):\n",
    "                self.list.append([word[0], \" - \" + dictionary[word[0]]])\n",
    "            else:\n",
    "                self.list.append([word[0], \" - symbol\"])\n",
    "            word[0] = \"\"\n",
    "            return state_start(symbol, word)\n",
    "        \n",
    "        def state_undefined_stop_symbol(symbol, word):\n",
    "            if symbol == \"=\":\n",
    "                return state_dual_stop_symbol\n",
    "            else:\n",
    "                if dictionary.get(word[0], False):\n",
    "                    self.list.append([word[0], \" - \" + dictionary[word[0]]])\n",
    "                else:\n",
    "                    self.list.append([word[0], \" - equality\"])\n",
    "                word[0] = \"\"\n",
    "                return state_start(symbol, word)\n",
    "            \n",
    "        def state_dual_stop_symbol(symbol, word):\n",
    "            if dictionary.get(word[0], False):\n",
    "                self.list.append([word[0], \" - \" + dictionary[word[0]]])\n",
    "            else:\n",
    "                self.list.append([word[0], \" - equality\"])\n",
    "            word[0] = \"\"\n",
    "            return state_start(symbol, word)\n",
    "        \n",
    "        def state_slash_symbol(symbol, word):\n",
    "            if symbol == \"/\":\n",
    "                return state_comment\n",
    "            else:\n",
    "                if dictionary.get(word[0], False):\n",
    "                    self.list.append([word[0], \" - \" + dictionary[word[0]]])\n",
    "                else:\n",
    "                    self.list.append([word[0], \" - slash\"])\n",
    "                word[0] = \"\"\n",
    "                return state_start(symbol, word)\n",
    "        \n",
    "        def state_comment(symbol, word):\n",
    "            if symbol == \"\\n\":\n",
    "                self.list.append([word[0], \" - comment\"])\n",
    "                word[0] = \"\"\n",
    "                return state_start(symbol, word)\n",
    "            else:\n",
    "                return state_comment\n",
    "            \n",
    "                \n",
    "        def state_identifier(symbol, word):   \n",
    "            if symbol in LETTERS + NUMBERS + \"_\":\n",
    "                return state_identifier\n",
    "            else:\n",
    "                if dictionary.get(word[0], False):\n",
    "                    self.list.append([word[0], \" - \" + dictionary[word[0]]])\n",
    "                else:\n",
    "                    self.list.append([word[0], \" - id\"])\n",
    "                word[0] = \"\"\n",
    "                return state_start(symbol, word)\n",
    "            \n",
    "        def state_hex_number(symbol, word):\n",
    "            if symbol in HEX:\n",
    "                return state_hex_number\n",
    "            elif symbol in NUMBERS + LETTERS:\n",
    "                return state_error(symbol, word)\n",
    "            else:\n",
    "                self.list.append([word[0], \" - hex\"])\n",
    "                word[0] = \"\"\n",
    "                return state_start(symbol, word)\n",
    "            \n",
    "        def state_bin_number(symbol, word):\n",
    "            if symbol in BIN:\n",
    "                return state_bin_number\n",
    "            elif symbol in NUMBERS + LETTERS:\n",
    "                return state_error(symbol, word)\n",
    "            else:\n",
    "                self.list.append([word[0], \" - bin\"])\n",
    "                word[0] = \"\"\n",
    "                return state_start(symbol, word)\n",
    "            \n",
    "        def state_oct_number(symbol, word):\n",
    "            if symbol in OCT:\n",
    "                return state_oct_number\n",
    "            elif symbol in NUMBERS + LETTERS:\n",
    "                return state_error(symbol, word)\n",
    "            else:\n",
    "                self.list.append([word[0], \" - oct\"])\n",
    "                word[0] = \"\"\n",
    "                return state_start(symbol, word)\n",
    "            \n",
    "        def state_float(symbol, word):\n",
    "            if symbol in NUMBERS:\n",
    "                return state_float\n",
    "            elif symbol in LETTERS:\n",
    "                return state_error(symbol, word)\n",
    "            else:\n",
    "                self.list.append([word[0], \" - float\"])\n",
    "                word[0] = \"\"\n",
    "                return state_start(symbol, word)\n",
    "        \n",
    "        def state_any_number(symbol, word):\n",
    "            if symbol == HEX_START:\n",
    "                return state_hex_number\n",
    "            elif symbol == BIN_START:\n",
    "                return state_bin_number\n",
    "            elif symbol in OCT:\n",
    "                return state_oct_number\n",
    "            elif symbol == POINT:\n",
    "                return state_float\n",
    "            elif symbol in NUMBERS + LETTERS:\n",
    "                return state_error(symbol, word)\n",
    "            else:\n",
    "                self.list.append([word[0], \" - int\"])\n",
    "                word[0] = \"\"\n",
    "                return state_start(symbol, word)\n",
    "            \n",
    "        def state_int_or_float(symbol, word):\n",
    "            if symbol in NUMBERS:\n",
    "                return state_int_or_float\n",
    "            elif symbol == POINT:\n",
    "                return state_float\n",
    "            elif symbol in LETTERS:\n",
    "                return state_error(symbol, word)\n",
    "            else:\n",
    "                self.list.append([word[0], \" - int\"])\n",
    "                word[0] = \"\"\n",
    "                return state_start(symbol, word)\n",
    "        \n",
    "        def state_start(symbol, word):\n",
    "            if symbol in LETTERS:\n",
    "                return state_identifier\n",
    "            elif symbol == \"/\":\n",
    "                return state_slash_symbol\n",
    "            elif symbol in \"<>!=\":\n",
    "                return state_undefined_stop_symbol\n",
    "            elif symbol in \"(){}[];+-*%, \\n\":\n",
    "                return state_unary_stop_symbol\n",
    "            elif symbol in \"123456789\":\n",
    "                return state_int_or_float\n",
    "            elif symbol == \"0\":\n",
    "                return state_any_number\n",
    "            else:\n",
    "                return state_error\n",
    "        \n",
    "        state = state_start\n",
    "        word = [\"\"]\n",
    "        for i in self.text:\n",
    "            new_state = state(i, word)\n",
    "            print(new_state, i)\n",
    "            \n",
    "            word[0] = word[0] + i\n",
    "            \n",
    "            state = new_state\n",
    "            \n",
    "            \n",
    "    def show(self):\n",
    "        for i in self.list:\n",
    "            print(i)\n",
    "            "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "temporal-addiction",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> v\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> o\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> i\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> d\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> m\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> a\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> i\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> n\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> (\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> i\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> n\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> t\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> a\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> r\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> s\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> ,\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> c\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> h\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> a\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> r\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> a\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> r\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> g\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> v\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> [\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> ]\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> )\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> {\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> i\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> n\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> t\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> i\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> ;\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_slash_symbol at 0x000001A8DDCAE040> /\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> /\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> i\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> n\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> i\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> t\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> f\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> l\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> o\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> a\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> t\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> f\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> ;\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> s\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> t\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> r\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> i\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> n\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> g\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> s\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> ;\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> b\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> o\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> o\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> l\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> b\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> ;\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> h\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> e\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> x\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> h\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> ;\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> o\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> c\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> t\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> o\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> ;\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> b\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> i\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> n\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> b\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> i\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> t\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> ;\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> f\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> i\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> x\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> e\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> d\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> f\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> i\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> x\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> ;\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> r\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> e\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> a\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> d\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> (\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> s\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> )\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> ;\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_slash_symbol at 0x000001A8DDCAE040> /\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> /\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> r\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> e\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> a\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> d\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0>  \n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> w\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> r\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> i\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> t\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> e\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> p\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> r\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> i\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> n\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> t\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> (\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> s\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> )\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> ;\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> i\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_undefined_stop_symbol at 0x000001A8E224FD30> =\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_any_number at 0x000001A8E22784C0> 0\n",
      "<function Lexer.run.<locals>.state_oct_number at 0x000001A8E22781F0> 6\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> ;\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_slash_symbol at 0x000001A8DDCAE040> /\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> /\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> a\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> s\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> s\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> i\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> g\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> n\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> i\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_undefined_stop_symbol at 0x000001A8E224FD30> =\n",
      "<function Lexer.run.<locals>.state_any_number at 0x000001A8E22784C0> 0\n",
      "<function Lexer.run.<locals>.state_hex_number at 0x000001A8E21774C0> x\n",
      "<function Lexer.run.<locals>.state_hex_number at 0x000001A8E21774C0> 7\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> ;\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> i\n",
      "<function Lexer.run.<locals>.state_undefined_stop_symbol at 0x000001A8E224FD30> =\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_any_number at 0x000001A8E22784C0> 0\n",
      "<function Lexer.run.<locals>.state_bin_number at 0x000001A8E2278040> b\n",
      "<function Lexer.run.<locals>.state_bin_number at 0x000001A8E2278040> 0\n",
      "<function Lexer.run.<locals>.state_bin_number at 0x000001A8E2278040> 1\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> ;\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> i\n",
      "<function Lexer.run.<locals>.state_undefined_stop_symbol at 0x000001A8E224FD30> =\n",
      "<function Lexer.run.<locals>.state_int_or_float at 0x000001A8E2278550> 6\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> ;\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> f\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_undefined_stop_symbol at 0x000001A8E224FD30> =\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_any_number at 0x000001A8E22784C0> 0\n",
      "<function Lexer.run.<locals>.state_float at 0x000001A8E2278430> .\n",
      "<function Lexer.run.<locals>.state_float at 0x000001A8E2278430> 5\n",
      "<function Lexer.run.<locals>.state_float at 0x000001A8E2278430> 0\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> ;\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> i\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> f\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> (\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> i\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_undefined_stop_symbol at 0x000001A8E224FD30> =\n",
      "<function Lexer.run.<locals>.state_dual_stop_symbol at 0x000001A8E224FA60> =\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_int_or_float at 0x000001A8E2278550> 6\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> o\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> r\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> i\n",
      "<function Lexer.run.<locals>.state_undefined_stop_symbol at 0x000001A8E224FD30> =\n",
      "<function Lexer.run.<locals>.state_dual_stop_symbol at 0x000001A8E224FA60> =\n",
      "<function Lexer.run.<locals>.state_int_or_float at 0x000001A8E2278550> 5\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> a\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> n\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> d\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> i\n",
      "<function Lexer.run.<locals>.state_undefined_stop_symbol at 0x000001A8E224FD30> !\n",
      "<function Lexer.run.<locals>.state_dual_stop_symbol at 0x000001A8E224FA60> =\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_int_or_float at 0x000001A8E2278550> 6\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> a\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> n\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> d\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> i\n",
      "<function Lexer.run.<locals>.state_undefined_stop_symbol at 0x000001A8E224FD30> <\n",
      "<function Lexer.run.<locals>.state_dual_stop_symbol at 0x000001A8E224FA60> =\n",
      "<function Lexer.run.<locals>.state_int_or_float at 0x000001A8E2278550> 5\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> )\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_slash_symbol at 0x000001A8DDCAE040> /\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> /\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> c\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> o\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> n\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> d\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> i\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> t\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> i\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> o\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> n\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> {\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> i\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_undefined_stop_symbol at 0x000001A8E224FD30> =\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_int_or_float at 0x000001A8E2278550> 5\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> ;\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> }\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> e\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> l\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> s\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> e\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> {\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> i\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_undefined_stop_symbol at 0x000001A8E224FD30> =\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_int_or_float at 0x000001A8E2278550> 6\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> ;\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> }\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> w\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> h\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> i\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> l\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> e\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> (\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> i\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_undefined_stop_symbol at 0x000001A8E224FD30> <\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_int_or_float at 0x000001A8E2278550> 1\n",
      "<function Lexer.run.<locals>.state_int_or_float at 0x000001A8E2278550> 0\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> )\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_slash_symbol at 0x000001A8DDCAE040> /\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> /\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> c\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> y\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> c\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> l\n",
      "<function Lexer.run.<locals>.state_comment at 0x000001A8E2177AF0> e\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> {\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> i\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_undefined_stop_symbol at 0x000001A8E224FD30> =\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> i\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> +\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_int_or_float at 0x000001A8E2278550> 1\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> ;\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> }\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> i\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_undefined_stop_symbol at 0x000001A8E224FD30> =\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_any_number at 0x000001A8E22784C0> 0\n",
      "<function Lexer.run.<locals>.state_error at 0x000001A8E224FF70> 8\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> ;\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> i\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_undefined_stop_symbol at 0x000001A8E224FD30> =\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_any_number at 0x000001A8E22784C0> 0\n",
      "<function Lexer.run.<locals>.state_hex_number at 0x000001A8E21774C0> x\n",
      "<function Lexer.run.<locals>.state_hex_number at 0x000001A8E21774C0> 1\n",
      "<function Lexer.run.<locals>.state_error at 0x000001A8E224FF70> g\n",
      "<function Lexer.run.<locals>.state_error at 0x000001A8E224FF70> 2\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> ;\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> i\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_undefined_stop_symbol at 0x000001A8E224FD30> =\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_any_number at 0x000001A8E22784C0> 0\n",
      "<function Lexer.run.<locals>.state_bin_number at 0x000001A8E2278040> b\n",
      "<function Lexer.run.<locals>.state_bin_number at 0x000001A8E2278040> 0\n",
      "<function Lexer.run.<locals>.state_error at 0x000001A8E224FF70> 2\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> ;\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> i\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_undefined_stop_symbol at 0x000001A8E224FD30> =\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_any_number at 0x000001A8E22784C0> 0\n",
      "<function Lexer.run.<locals>.state_error at 0x000001A8E224FF70> a\n",
      "<function Lexer.run.<locals>.state_error at 0x000001A8E224FF70> b\n",
      "<function Lexer.run.<locals>.state_error at 0x000001A8E224FF70> c\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> ;\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> i\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> a\n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> s\n",
      "<function Lexer.run.<locals>.state_error at 0x000001A8E224FF70> &\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_undefined_stop_symbol at 0x000001A8E224FD30> =\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_int_or_float at 0x000001A8E2278550> 1\n",
      "<function Lexer.run.<locals>.state_int_or_float at 0x000001A8E2278550> 2\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> ;\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_identifier at 0x000001A8E21773A0> i\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_undefined_stop_symbol at 0x000001A8E224FD30> =\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0>  \n",
      "<function Lexer.run.<locals>.state_int_or_float at 0x000001A8E2278550> 1\n",
      "<function Lexer.run.<locals>.state_int_or_float at 0x000001A8E2278550> 2\n",
      "<function Lexer.run.<locals>.state_error at 0x000001A8E224FF70> a\n",
      "<function Lexer.run.<locals>.state_error at 0x000001A8E224FF70> b\n",
      "<function Lexer.run.<locals>.state_error at 0x000001A8E224FF70> c\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> ;\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> }\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "<function Lexer.run.<locals>.state_unary_stop_symbol at 0x000001A8E224FDC0> \n",
      "\n",
      "['\\n', ' - new_line']\n",
      "['\\n', ' - new_line']\n",
      "['void', ' - function_type']\n",
      "[' ', ' - separator']\n",
      "['main', ' - entry_point']\n",
      "['(', ' - bracket_smooth_l']\n",
      "['int', ' - type']\n",
      "[' ', ' - separator']\n",
      "['ars', ' - id']\n",
      "[',', ' - comma']\n",
      "[' ', ' - separator']\n",
      "['char', ' - type']\n",
      "[' ', ' - separator']\n",
      "['argv', ' - id']\n",
      "['[', ' - bracket_rect_l']\n",
      "[']', ' - bracket_rect_r']\n",
      "[')', ' - bracket_smooth_r']\n",
      "['\\n', ' - new_line']\n",
      "['{', ' - bracket_curve_l']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['int', ' - type']\n",
      "[' ', ' - separator']\n",
      "['i', ' - id']\n",
      "[';', ' - divider']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['//init', ' - comment']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['float', ' - type']\n",
      "[' ', ' - separator']\n",
      "['f', ' - id']\n",
      "[';', ' - divider']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['string', ' - type']\n",
      "[' ', ' - separator']\n",
      "['s', ' - id']\n",
      "[';', ' - divider']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['bool', ' - type']\n",
      "[' ', ' - separator']\n",
      "['b', ' - id']\n",
      "[';', ' - divider']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['hex', ' - type']\n",
      "[' ', ' - separator']\n",
      "['h', ' - id']\n",
      "[';', ' - divider']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['oct', ' - type']\n",
      "[' ', ' - separator']\n",
      "['o', ' - id']\n",
      "[';', ' - divider']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['bin', ' - type']\n",
      "[' ', ' - separator']\n",
      "['bit', ' - id']\n",
      "[';', ' - divider']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['fixed', ' - type']\n",
      "[' ', ' - separator']\n",
      "['fix', ' - id']\n",
      "[';', ' - divider']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['read', ' - reader']\n",
      "['(', ' - bracket_smooth_l']\n",
      "['s', ' - id']\n",
      "[')', ' - bracket_smooth_r']\n",
      "[';', ' - divider']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['//read write', ' - comment']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['print', ' - printer']\n",
      "['(', ' - bracket_smooth_l']\n",
      "[' ', ' - separator']\n",
      "['s', ' - id']\n",
      "[' ', ' - separator']\n",
      "[')', ' - bracket_smooth_r']\n",
      "[';', ' - divider']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['i', ' - id']\n",
      "[' ', ' - separator']\n",
      "['=', ' - assign']\n",
      "[' ', ' - separator']\n",
      "['06', ' - oct']\n",
      "[';', ' - divider']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['//assign', ' - comment']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['i', ' - id']\n",
      "[' ', ' - separator']\n",
      "['=', ' - assign']\n",
      "['0x7', ' - hex']\n",
      "[';', ' - divider']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['i', ' - id']\n",
      "['=', ' - assign']\n",
      "[' ', ' - separator']\n",
      "['0b01', ' - bin']\n",
      "[';', ' - divider']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['i', ' - id']\n",
      "['=', ' - assign']\n",
      "['6', ' - int']\n",
      "[';', ' - divider']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['f', ' - id']\n",
      "[' ', ' - separator']\n",
      "['=', ' - assign']\n",
      "[' ', ' - separator']\n",
      "['0.50', ' - float']\n",
      "[';', ' - divider']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['if', ' - condition']\n",
      "['(', ' - bracket_smooth_l']\n",
      "['i', ' - id']\n",
      "[' ', ' - separator']\n",
      "['==', ' - comparsion']\n",
      "[' ', ' - separator']\n",
      "['6', ' - int']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['or', ' - id']\n",
      "[' ', ' - separator']\n",
      "['i', ' - id']\n",
      "['==', ' - comparsion']\n",
      "['5', ' - int']\n",
      "[' ', ' - separator']\n",
      "['and', ' - id']\n",
      "[' ', ' - separator']\n",
      "['i', ' - id']\n",
      "['!=', ' - comparsion']\n",
      "[' ', ' - separator']\n",
      "['6', ' - int']\n",
      "[' ', ' - separator']\n",
      "['and', ' - id']\n",
      "[' ', ' - separator']\n",
      "['i', ' - id']\n",
      "['<=', ' - comparsion']\n",
      "['5', ' - int']\n",
      "[')', ' - bracket_smooth_r']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['//condition', ' - comment']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['{', ' - bracket_curve_l']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['i', ' - id']\n",
      "[' ', ' - separator']\n",
      "['=', ' - assign']\n",
      "[' ', ' - separator']\n",
      "['5', ' - int']\n",
      "[';', ' - divider']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['}', ' - bracket_curve_r']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['else', ' - condition_else']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['{', ' - bracket_curve_l']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['i', ' - id']\n",
      "[' ', ' - separator']\n",
      "['=', ' - assign']\n",
      "[' ', ' - separator']\n",
      "['6', ' - int']\n",
      "[';', ' - divider']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['}', ' - bracket_curve_r']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['while', ' - cycle']\n",
      "['(', ' - bracket_smooth_l']\n",
      "['i', ' - id']\n",
      "[' ', ' - separator']\n",
      "['<', ' - comparsion']\n",
      "[' ', ' - separator']\n",
      "['10', ' - int']\n",
      "[')', ' - bracket_smooth_r']\n",
      "[' ', ' - separator']\n",
      "['//cycle', ' - comment']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['{', ' - bracket_curve_l']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['i', ' - id']\n",
      "[' ', ' - separator']\n",
      "['=', ' - assign']\n",
      "[' ', ' - separator']\n",
      "['i', ' - id']\n",
      "[' ', ' - separator']\n",
      "['+', ' - math_symbol']\n",
      "[' ', ' - separator']\n",
      "['1', ' - int']\n",
      "[';', ' - divider']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['}', ' - bracket_curve_r']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['i', ' - id']\n",
      "[' ', ' - separator']\n",
      "['=', ' - assign']\n",
      "[' ', ' - separator']\n",
      "['08', ' - error']\n",
      "[';', ' - divider']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['i', ' - id']\n",
      "[' ', ' - separator']\n",
      "['=', ' - assign']\n",
      "[' ', ' - separator']\n",
      "['0x1g2', ' - error']\n",
      "[';', ' - divider']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['i', ' - id']\n",
      "[' ', ' - separator']\n",
      "['=', ' - assign']\n",
      "[' ', ' - separator']\n",
      "['0b02', ' - error']\n",
      "[';', ' - divider']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['i', ' - id']\n",
      "[' ', ' - separator']\n",
      "['=', ' - assign']\n",
      "[' ', ' - separator']\n",
      "['0abc', ' - error']\n",
      "[';', ' - divider']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['ias', ' - id']\n",
      "['&', ' - error']\n",
      "[' ', ' - separator']\n",
      "['=', ' - assign']\n",
      "[' ', ' - separator']\n",
      "['12', ' - int']\n",
      "[';', ' - divider']\n",
      "['\\n', ' - new_line']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "[' ', ' - separator']\n",
      "['i', ' - id']\n",
      "[' ', ' - separator']\n",
      "['=', ' - assign']\n",
      "[' ', ' - separator']\n",
      "['12abc', ' - error']\n",
      "[';', ' - divider']\n",
      "['\\n', ' - new_line']\n",
      "['}', ' - bracket_curve_r']\n",
      "['\\n', ' - new_line']\n",
      "['\\n', ' - new_line']\n"
     ]
    }
   ],
   "source": [
    "lex = Lexer(program_text)\n",
    "lex.run()\n",
    "lex.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
